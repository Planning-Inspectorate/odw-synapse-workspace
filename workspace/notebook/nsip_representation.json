{
	"name": "nsip_representation",
	"properties": {
		"description": "Creation of the Relevant Representation Curated layer for use by ODT",
		"folder": {
			"name": "odw-curated"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pinssynspodw34",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "0e4cbac6-bd50-4719-8c20-6eeac0aa56d3"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ff442a29-fc06-4a13-8e3e-65fd5da513b3/resourceGroups/pins-rg-data-odw-dev-uks/providers/Microsoft.Synapse/workspaces/pins-synw-odw-dev-uks/bigDataPools/pinssynspodw34",
				"name": "pinssynspodw34",
				"type": "Spark",
				"endpoint": "https://pins-synw-odw-dev-uks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pinssynspodw34",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.4",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"#### The purpose of this pyspark notebook is to ingest service bus data and appends into a single external table, odw_curated_db.nsip_representation.\n",
					"\n",
					"**Description**  \n",
					"The functionality of this notebook is to ingest data into odw_curated_db.nsip_representation external table reading from odw_harmonised_db.nsip_representation delta table.The addtitional functionality has been added to log the audit information to Application Insight by creating a Json dump at notebook exit\n",
					"\n",
					"**Spark Cluster Configuration** -> Apache Spark Version- 3.4, Python Version \t\t- 3.10, Delta Lake Version \t- 2.4\n",
					""
				]
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"##### Import Packages"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from pyspark.sql.functions import *\n",
					"from pyspark.sql.types import *\n",
					"from pyspark.sql import DataFrame\n",
					"import json"
				],
				"execution_count": 11
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"##### Initialise Application Insight Logging functions"
				]
			},
			{
				"cell_type": "code",
				"source": [
					"%run utils/py_applicationinsights"
				],
				"execution_count": 12
			},
			{
				"cell_type": "code",
				"source": [
					"# This cell is generated from runtime parameters. Learn more: https://go.microsoft.com/fwlink/?linkid=2161015\n",
					"PipelineName = \"pln_curated\"\n",
					"PipelineRunID = \"cc82f8ea-94ff-40f9-8ed1-4b831d20d782\"\n",
					"PipelineTriggerID = \"752d4c0b17ed4640a0f7c343cc5e1c37\"\n",
					"PipelineTriggerName = \"Sandbox\"\n",
					"PipelineTriggerType = \"Manual\"\n",
					"PipelineTriggeredbyPipelineName = None\n",
					"PipelineTriggeredbyPipelineRunID = None\n",
					""
				],
				"execution_count": 13
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"db_name: str = \"odw_curated_db\"\n",
					"entity_name: str = \"nsip-representation\"\n",
					"table_name: str = \"odw_curated_db.nsip_representation\"\n",
					"\n",
					"start_exec_time = datetime.now()\n",
					"insert_count = 0\n",
					"update_count = 0\n",
					"delete_count = 0\n",
					"error_message=''"
				],
				"execution_count": 14
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"##### Create a view for the data, joining harmonised tables where necessary"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"outputs_hidden": false
					},
					"collapsed": false
				},
				"source": [
					"try:\n",
					"    df = spark.sql(\"\"\"\n",
					"        SELECT DISTINCT\n",
					"        RR.representationId\n",
					"        ,RR.webreference As referenceId\n",
					"        ,RR.examinationLibraryRef\n",
					"        ,RR.caseRef\n",
					"        ,RR.caseId\n",
					"        ,CASE\n",
					"            WHEN RR.status = 'New' OR RR.status = 'In Progress' THEN\n",
					"                'awaiting_review'\n",
					"            WHEN RR.status = 'Complete' THEN\n",
					"                'valid'\n",
					"            WHEN RR.status = 'Do Not Publish' THEN\n",
					"                'invalid'\n",
					"            ELSE \n",
					"                LOWER(RR.status)\n",
					"        END AS status\n",
					"        ,COALESCE(RR.originalRepresentation, '') AS originalRepresentation\n",
					"        ,RR.redacted\n",
					"        ,RR.redactedRepresentation\n",
					"        ,RR.redactedBy\n",
					"        ,RR.redactedNotes\n",
					"        ,CASE\n",
					"            WHEN RR.representationFrom = 'An Organisation' THEN \n",
					"                'ORGANISATION'\n",
					"            -- WHEN RR.representationFrom = 'Members of the Public/Businesses' and SU2.Organisation IS NOT NULL THEN\n",
					"            --     'ORGANISATION'\n",
					"            WHEN RR.representationFrom = 'Members of the Public/Businesses' THEN\n",
					"                'PERSON'\n",
					"            -- WHEN RR.representationFrom = 'Another Individual or Organisation' and SU2.Organisation IS NOT NULL THEN\n",
					"            --      'ORGANISATION'\n",
					"            WHEN RR.representationFrom = 'Another Individual or Organisation' THEN\n",
					"                'PERSON'\n",
					"            WHEN RR.representationFrom = 'Myself' THEN\n",
					"                'PERSON'\n",
					"            ELSE\n",
					"                RR.representationFrom\n",
					"        END AS representationFrom\n",
					"        ,RR.representedId\n",
					"        ,RR.representativeId\n",
					"        ,CASE\n",
					"            WHEN RR.representationFrom = 'An Organisation' THEN\n",
					"                'ORGANISATION'\n",
					"            -- WHEN RR.representationFrom = 'Members of the Public/Businesses' AND SU1.Organisation IS NOT NULL THEN\n",
					"            --     'ORGANISATION'\n",
					"            WHEN RR.representationFrom = 'Members of the Public/Businesses' THEN\n",
					"                'PERSON'\n",
					"            -- WHEN RR.representationFrom = 'Another Individual or Organisation' AND SU1.Organisation IS NOT NULL THEN \n",
					"            --     'ORGANISATION'\n",
					"            WHEN RR.representationFrom = 'Another Individual or Organisation' THEN\n",
					"                'PERSON'\n",
					"            WHEN RR.representationFrom = 'Myself' THEN\n",
					"                'PERSON'\n",
					"            ELSE\n",
					"                RR.registerFor\n",
					"        END AS registerFor\n",
					"        ,CASE\n",
					"            WHEN RR.representationType = 'Other Statutory Consultees' THEN\n",
					"                'Statutory Consultees'\n",
					"            ELSE\n",
					"                RR.representationType\n",
					"            END AS representationType\n",
					"            ,RR.dateReceived\n",
					"            ,RR.attachmentIds\n",
					"    FROM odw_harmonised_db.nsip_representation AS RR\n",
					"    -- INNER JOIN odw_curated_db.nsip_project AS NP -- project\n",
					"    --     ON RR.caseRef = NP.caseReference\n",
					"    WHERE RR.IsActive = 'Y'\n",
					"        AND RR.caseRef IS NOT NULL\n",
					"    \"\"\"\n",
					"    )\n",
					"\n",
					"except Exception as e:\n",
					"    error_message = f\"Error in SQL query for table  : {str(e)[:800]}\"\n",
					"    end_exec_time = datetime.now()"
				],
				"execution_count": 15
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"##### Write the data to the curated table"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"if not error_message:\n",
					"    try:\n",
					"        insert_count = df.count()\n",
					"        print(insert_count)\n",
					"        df.write.mode(\"overwrite\").format(\"parquet\").saveAsTable(table_name)\n",
					"        print(f\"Written to {table_name}\")\n",
					"        \n",
					"        end_exec_time = datetime.now()\n",
					"\n",
					"    except Exception as e:\n",
					"        error_message = f\"Error appending data to the curated layer {table_name} table : {str(e)[:800]}\"\n",
					"        end_exec_time = datetime.now()"
				],
				"execution_count": 16
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"#####  Logging Execution Metadata to Azure Application Insights"
				]
			},
			{
				"cell_type": "code",
				"source": [
					"duration_seconds = (end_exec_time - start_exec_time).total_seconds()\n",
					"activity_type = f\"{mssparkutils.runtime.context['currentNotebookName']} Notebook\"\n",
					"stage = \"Success\" if not error_message else \"Failed\"\n",
					"status_message = (\n",
					"    f\"Successfully loaded data into {table_name} table\"\n",
					"    if not error_message\n",
					"    else f\"Failed to load data from {table_name} table\"\n",
					")\n",
					"status_code = \"200\" if stage == \"Success\" else \"500\"\n",
					"\n",
					"log_telemetry_and_exit(\n",
					"    stage,\n",
					"    start_exec_time,\n",
					"    end_exec_time,\n",
					"    error_message,\n",
					"    table_name,\n",
					"    insert_count,\n",
					"    update_count,\n",
					"    delete_count,\n",
					"    PipelineName,\n",
					"    PipelineRunID,\n",
					"    PipelineTriggerID,\n",
					"    PipelineTriggerName,\n",
					"    PipelineTriggerType,\n",
					"    PipelineTriggeredbyPipelineName,\n",
					"    PipelineTriggeredbyPipelineRunID,\n",
					"    activity_type,\n",
					"    duration_seconds,\n",
					"    status_message,\n",
					"    status_code\n",
					")"
				],
				"execution_count": 17
			}
		]
	}
}