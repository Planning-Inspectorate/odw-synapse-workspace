{
	"name": "pln_service_bus_ingest",
	"properties": {
		"activities": [
			{
				"name": "Guard sbEntities empty",
				"type": "IfCondition",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(length(pipeline().parameters.sbEntities), 0)\n",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "Log no SB entities",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"policy": {
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "pln_log_to_appins",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"Stage": "Warning",
									"PipelineName": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"PipelineRunID": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"StartTime": {
										"value": "@formatDateTime(utcnow(),'yyyy-MM-ddTHH:mm:ssZ')",
										"type": "Expression"
									},
									"EndTime": {
										"value": "@formatDateTime(utcnow(),'yyyy-MM-ddTHH:mm:ssZ')",
										"type": "Expression"
									},
									"ErrorMessage": "No Service Bus entities to process",
									"StatusMessage": "NoWork",
									"AppInsIKey": {
										"value": "@string(\n  coalesce(\n    json(pipeline().parameters.runContextJson)?['appInsightsKey'],\n    json(pipeline().parameters.runContextJson)?['apps_insights_ikey'],\n    ''\n  )\n)\n",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "Set empty status json",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Log no SB entities",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "serviceBusStatusJson",
								"value": "[]"
							}
						}
					]
				}
			},
			{
				"name": "ForEach Service Bus entities",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Guard sbEntities empty",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@pipeline().parameters.sbEntities",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Random wait",
							"type": "Wait",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"waitTimeInSeconds": {
									"value": "@rand(1,20)",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Src to Raw standard",
							"type": "ExecutePipeline",
							"dependsOn": [
								{
									"activity": "Random wait",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "pln_trigger_function_app",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"function_name": {
										"value": "@item()",
										"type": "Expression"
									},
									"Key_Vault_Url": {
										"value": "@string(\n  coalesce(\n    json(pipeline().parameters.runContextJson)?['keyVaultUrl'],\n    json(pipeline().parameters.runContextJson)?['Key_Vault_Url'],\n    ''\n  )\n)\n",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "If entity is service user",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Src to Raw standard",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(item(),'service-user')\n",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "Src to Raw appeal service user",
										"type": "ExecutePipeline",
										"dependsOn": [],
										"policy": {
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"pipeline": {
												"referenceName": "pln_trigger_function_app",
												"type": "PipelineReference"
											},
											"waitOnCompletion": true,
											"parameters": {
												"function_name": "appeal-service-user",
												"Key_Vault_Url": {
													"value": "@string(\n  coalesce(\n    json(pipeline().parameters.runContextJson)?['keyVaultUrl'],\n    json(pipeline().parameters.runContextJson)?['Key_Vault_Url'],\n    ''\n  )\n)\n",
													"type": "Expression"
												}
											}
										}
									}
								]
							}
						}
					]
				}
			}
		],
		"parameters": {
			"runContextJson": {
				"type": "string"
			},
			"sbEntities": {
				"type": "array",
				"defaultValue": []
			},
			"retryCount": {
				"type": "int",
				"defaultValue": 2
			},
			"failOnFirstError": {
				"type": "bool",
				"defaultValue": false
			}
		},
		"variables": {
			"serviceBusStatus": {
				"type": "Array",
				"defaultValue": []
			},
			"serviceBusStatusJson": {
				"type": "String",
				"defaultValue": "[]"
			}
		},
		"folder": {
			"name": "utils/Ingest"
		},
		"annotations": []
	}
}